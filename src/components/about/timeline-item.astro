---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

type ImageWidth = "1/2" | "1/3" | "2/3" | "full";

export interface TimelineItemType {
  title: string;
  date: string;
  images: Array<{
    src: ImageMetadata;
    width: ImageWidth;
  }>;
}

type Props = TimelineItemType;
const { title, date, images } = Astro.props as Props;

const getWidthClass = (width: ImageWidth) => {
  switch (width) {
    case "1/2":
      return "w-full md:w-[calc(50%-0.25rem)]";
    case "1/3":
      return "w-full md:w-[calc(33.333%-0.25rem)]";
    case "2/3":
      return "w-full md:w-[calc(66.666%-0.25rem)]";
    case "full":
      return "w-full";
    default:
      return "w-full";
  }
};
---

<div class="group relative flex flex-col pb-20">
  <div class="flex w-full items-center justify-center">
    <div class="w-full">
      <div class="">
        <p
          class="text-label-m whitespace-nowrap text-neutral-600 group-last:hidden"
        >
          {date}
        </p>
        <h2 class="py-4 pl-4 text-heading-sm text-neutral-dark-30">{title}</h2>
      </div>

      <div class="pl-4 pt-4">
        <slot />
      </div>
      <div class="flex flex-row flex-wrap gap-2 pt-10">
        {
          images.map(image => (
            <div class={getWidthClass(image.width)}>
              <Image
                src={image.src}
                alt={title}
                width={1160}
                height={330}
                class="rounded-xs h-full w-full object-cover md:rounded-s"
                loading="lazy"
              />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>
